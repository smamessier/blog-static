<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-GB"><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://seb.mamessier.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://seb.mamessier.com/" rel="alternate" type="text/html" hreflang="en-GB" /><updated>2018-02-01T22:58:42-05:00</updated><id>http://seb.mamessier.com/</id><title type="html">Standard Deviation</title><subtitle>Standard Deviation is where I gather my thoughts and pieces of work that could benefit a broader audience one way or another. You will find academic projects, thoughts about new technologies, software tutorials as well as my resume.</subtitle><author><name>Sebastien Mamessier</name></author><entry><title type="html">Welcome to Jekyll!</title><link href="http://seb.mamessier.com/jekyll/update/2017/08/25/welcome-to-jekyll/" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-08-25T10:48:19-05:00</published><updated>2017-08-25T10:48:19-05:00</updated><id>http://seb.mamessier.com/jekyll/update/2017/08/25/welcome-to-jekyll</id><content type="html" xml:base="http://seb.mamessier.com/jekyll/update/2017/08/25/welcome-to-jekyll/">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>Sebastien Mamessier</name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. To add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: def print_hi(name) puts &quot;Hi, #{name}&quot; end print_hi('Tom') #=&amp;gt; prints 'Hi, Tom' to STDOUT. Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://seb.mamessier.com/assets/default-social-image.png" /></entry><entry><title type="html">Description of a Pot Still</title><link href="http://seb.mamessier.com/general/2016/08/29/example-post-three/" rel="alternate" type="text/html" title="Description of a Pot Still" /><published>2016-08-29T00:00:00-05:00</published><updated>2016-08-29T00:00:00-05:00</updated><id>http://seb.mamessier.com/general/2016/08/29/example-post-three</id><content type="html" xml:base="http://seb.mamessier.com/general/2016/08/29/example-post-three/">&lt;p&gt;A pot still is a type of still used in distilling spirits such as whisky or brandy. Heat is applied directly to the pot containing the wash (for whisky) or wine (for brandy). This is called a batch distillation (as opposed to a continuous distillation).&lt;/p&gt;

&lt;p&gt;At standard atmospheric pressure, alcohol boils at 78 °C (172 °F), while water boils at 100 °C (212 °F). During distillation, the vapour contains more alcohol than the liquid. When the vapours are condensed, the resulting liquid contains a higher concentration of alcohol. In the pot still, the alcohol and water vapour combine with esters and flow from the still through the condensing coil. There they condense into the first distillation liquid, the so-called “low wines”. The low wines have a strength of about 25–35% alcohol by volume, and flow into a second still. It is then distilled a second time to produce the colourless spirit, collected at about 70% alcohol by volume. Colour is added through maturation in an oak aging barrel, and develops over time.&lt;/p&gt;

&lt;p&gt;The modern pot still is a descendant of the alembic, an earlier distillation device.&lt;/p&gt;</content><author><name>Sebastien Mamessier</name></author><category term="General" /><summary type="html">A pot still is a type of still used in distilling spirits such as whisky or brandy. Heat is applied directly to the pot containing the wash (for whisky) or wine (for brandy).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unsplash.it/1200/400?image=1048" /></entry><entry><title type="html">History of the Alembic</title><link href="http://seb.mamessier.com/history/2016/08/28/example-post-two/" rel="alternate" type="text/html" title="History of the Alembic" /><published>2016-08-28T00:00:00-05:00</published><updated>2016-08-28T00:00:00-05:00</updated><id>http://seb.mamessier.com/history/2016/08/28/example-post-two</id><content type="html" xml:base="http://seb.mamessier.com/history/2016/08/28/example-post-two/">&lt;p&gt;Dioscorides’ ambix (described in his De materia medica) is a helmet-shaped lid for gathering condensed mercury. For Athenaeus (~ 225 C.E.) it is a bottle or flask. For later chemists it denotes various parts of crude distillation devices.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Alembic drawings appear in works of Cleopatra the Alchemist, Synesius, and Zosimos of Panopolis. There were alembics with two (dibikos) and three (tribikos) receivers.[4] According to Zosimos of Panopolis, the alembic was invented by Mary the Jewess.[5]&lt;/p&gt;

&lt;p&gt;The anbik is described by Ibn al-Awwam in his Kitab al-Filaha (Book of Agriculture), where he explains how rose-water is distilled. Amongst others, it is mentioned in the Mafatih al-Ulum (Key of Sciences) of Khwarizmi and the Kitab al-Asrar (Book of Secrets) of Al-Razi. Some illustrations occur in the Latin translations of works which are attributed to Geber.[2]&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally from &lt;a href=&quot;https://en.wikipedia.org/wiki/Alembic&quot;&gt;Alembic - Wikipedia&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content><author><name>Sebastien Mamessier</name></author><category term="History" /><summary type="html">Dioscorides’ ambix (described in his De materia medica) is a helmet-shaped lid for gathering condensed mercury. For Athenaeus (~ 225 C.E.) it is a bottle or flask. For later chemists it denotes various parts of crude distillation devices.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://seb.mamessier.com/assets/default-social-image.png" /></entry><entry><title type="html">Description of an Alembic</title><link href="http://seb.mamessier.com/general/2016/08/27/example-post-one/" rel="alternate" type="text/html" title="Description of an Alembic" /><published>2016-08-27T00:00:00-05:00</published><updated>2016-08-27T00:00:00-05:00</updated><id>http://seb.mamessier.com/general/2016/08/27/example-post-one</id><content type="html" xml:base="http://seb.mamessier.com/general/2016/08/27/example-post-one/">&lt;p&gt;The complete distilling apparatus consists of three parts: the “cucurbit” (Arabic ḳarʿa, Greek βίκος), the still pot containing the liquid to be distilled, which is heated by a flame; the “head” or “cap” (Arabic anbiḳ, Greek ἄμβιξ) which fits over the mouth of the cucurbit to receive the vapors, with an attached downward-sloping “tube” (Greek σωλήν), leading to the “receiver” (Arabic ḳābila, Greek ἄγγος or φιάλη) container.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Retorts have the “cap” and the “cucurbit” made into one. The anbik is also called the raʾs (head) of the cucurbit. The liquid in the cucurbit is heated or boiled; the vapour rises into the anbik, where it cools by contact with the walls and condenses, running down the spout into the receiver. A modern descendant of the alembic is the pot still, used to produce distilled beverages.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally from &lt;a href=&quot;https://en.wikipedia.org/wiki/Alembic&quot;&gt;Alembic - Wikipedia&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content><author><name>Sebastien Mamessier</name></author><category term="General" /><summary type="html">The complete distilling apparatus consists of three parts: the “cucurbit” (Arabic ḳarʿa, Greek βίκος), the still pot containing the liquid to be distilled, which is heated by a flame; the “head” or “cap” (Arabic anbiḳ, Greek ἄμβιξ) which fits over the mouth of the cucurbit to receive the vapors, with an attached downward-sloping “tube” (Greek σωλήν), leading to the “receiver” (Arabic ḳābila, Greek ἄγγος or φιάλη) container.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://seb.mamessier.com/assets/default-social-image.png" /></entry><entry><title type="html">Intuitive vs Nonintuitive decision making</title><link href="http://seb.mamessier.com/2016/06/01/intuitive-vs-nonuntuitive-decisions/" rel="alternate" type="text/html" title="Intuitive vs Nonintuitive decision making" /><published>2016-06-01T15:52:23-05:00</published><updated>2016-06-01T15:52:23-05:00</updated><id>http://seb.mamessier.com/2016/06/01/intuitive-vs-nonuntuitive-decisions</id><content type="html" xml:base="http://seb.mamessier.com/2016/06/01/intuitive-vs-nonuntuitive-decisions/">&lt;p&gt;This blog post summarizes &lt;a href=&quot;http://psycnet.apa.org/journals/xge/135/3/409/&quot;&gt;Simmons and Nelson’ study&lt;/a&gt; about how people incorporate constraining/contradicting information into their initial intuitive thought when asked to make a decision. It was written in the context of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Intro to Cognitive Science&lt;/code&gt; class.&lt;/p&gt;

&lt;h3 id=&quot;intuitive-confidence-choosing-between-intuitive-and-nonintuitive-alternatives&quot;&gt;Intuitive Confidence: Choosing Between Intuitive and Nonintuitive Alternatives&lt;/h3&gt;

&lt;p&gt;Authors: Joseph P. Simmons (Princeton University), Leif D. Nelson (New York University)&lt;/p&gt;

&lt;h4 id=&quot;introduction&quot;&gt;Introduction&lt;/h4&gt;

&lt;p&gt;People seem to favor intuitive options rather than equally or more valid nonintuitive options when taking decisions. This paper intends to explain how people weigh intuitive answers and nonintuitive alternatives that might oppose their initial intuition.&lt;/p&gt;

&lt;p&gt;It has been shown that people often prefer to follow their intuition even when conflicting with other available information, leading to judgment biases. Simmons and Nelson review the relevant related phenomena such as &lt;code class=&quot;highlighter-rouge&quot;&gt;transparency illusions&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;beliefs in explicitly false statements&lt;/code&gt; and other biases appearing at different levels of human cognition. It seems plausible that two distinct systems are competing, the first one being responsible for fast, effortless, heuristics and knowledge based decisions whereas the second system - much slower and resource-demanding - attempts to correct the initial judgment using available cues, rules and reasoning.&lt;/p&gt;

&lt;p&gt;Some theories indicate that &lt;code class=&quot;highlighter-rouge&quot;&gt;cognitive lazyness&lt;/code&gt; could prevent &lt;code class=&quot;highlighter-rouge&quot;&gt;System 2&lt;/code&gt; from kicking in and contributing to the decision. Others state that the sequential nature of the judgment process advantages the primity of the intuitive thought as &lt;code class=&quot;highlighter-rouge&quot;&gt;System 2&lt;/code&gt; has to falsify &lt;code class=&quot;highlighter-rouge&quot;&gt;System 1&lt;/code&gt;’s conclusions persuasively. This phenomena is commonly refered to as &lt;code class=&quot;highlighter-rouge&quot;&gt;anchoring and adjustment&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, such models can’t extensively explain the observed proportion of intuitive biases among motivated reasoners who fully process contradictory information. Simmons and Nelson propose a so-call &lt;code class=&quot;highlighter-rouge&quot;&gt;dual-process&lt;/code&gt; model that supposedly explains the observed phenomena and makes relevant predictions.&lt;/p&gt;

&lt;h4 id=&quot;simmon-and-nelsons-model&quot;&gt;Simmon and Nelson’s model&lt;/h4&gt;

&lt;p&gt;The authors’s model relies on four hypotheses:&lt;/p&gt;

&lt;p&gt;1) Intuitions are chosen more often because people hold them with high Confidence&lt;/p&gt;

&lt;p&gt;2) The magnitude of an opposing piece of information matters for invalidating intuition.&lt;/p&gt;

&lt;p&gt;3) People who are more confident about their intuition will follow them more often&lt;/p&gt;

&lt;p&gt;4) People who &lt;code class=&quot;highlighter-rouge&quot;&gt;betray&lt;/code&gt; their intuition are less confident with their final choice.&lt;/p&gt;

&lt;p&gt;These rather natural hypotheses are then evaluated by the authors using predition of sporting events as a field case as it provides the experiment with the required variability of inputs magnitude and intuitive confidence.&lt;/p&gt;

&lt;p&gt;The example of the football bookmaker &lt;code class=&quot;highlighter-rouge&quot;&gt;point spread&lt;/code&gt; concept is demonstrated, attempting to explain how most people handle this question. In this case, the initial intuition will answer the question &lt;code class=&quot;highlighter-rouge&quot;&gt;which team will win&lt;/code&gt; and the point spread serves as the constraining information where further reasoning should be involved. All four hypotheses can be nicely instantiated against this scenario and evaluated against historical data.&lt;/p&gt;

&lt;p&gt;The following bullets summarize the result of Simmon and Nelson’s studies regarding the point spread example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Most people bet on favorites in 90% of the games despite of the the point spread. Hypothesis 1 is verified (holds for rookies and experts)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The spread magnitude negatively impacts this proportion. Hyp 2 is correct (holds for rookies and experts)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;People betting on underdogs showed less confidence on the outcome, which seems to verify hypothesis 4 is verified.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, people bet for favorites even when setting the spread themselves. This study was design to eliminate the hypothesis that people simply don’t understand the &lt;code class=&quot;highlighter-rouge&quot;&gt;point spread&lt;/code&gt; concept when betting on football results. Moreover, this part of the study also verifies hypothesis 4.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;The main finding of this article seems to be that confidence in intuition is the most important factor influencing intuitive versus nonintuitive decisions. Countermeasures are proposed such as artificially altering one’s confidence against their own intuition. Another possible explanation is that people tend to answer a relaxed version of a question (in this case, who will win instead of who will beat the point spread), or sometimes even a different question (which team do you prefer).&lt;/p&gt;</content><author><name>Sebastien Mamessier</name></author><category term="blog" /><summary type="html">This blog post summarizes Simmons and Nelson’ study about how people incorporate constraining/contradicting information into their initial intuitive thought when asked to make a decision. It was written in the context of the Intro to Cognitive Science class. Intuitive Confidence: Choosing Between Intuitive and Nonintuitive Alternatives Authors: Joseph P. Simmons (Princeton University), Leif D. Nelson (New York University) Introduction People seem to favor intuitive options rather than equally or more valid nonintuitive options when taking decisions. This paper intends to explain how people weigh intuitive answers and nonintuitive alternatives that might oppose their initial intuition. It has been shown that people often prefer to follow their intuition even when conflicting with other available information, leading to judgment biases. Simmons and Nelson review the relevant related phenomena such as transparency illusions, beliefs in explicitly false statements and other biases appearing at different levels of human cognition. It seems plausible that two distinct systems are competing, the first one being responsible for fast, effortless, heuristics and knowledge based decisions whereas the second system - much slower and resource-demanding - attempts to correct the initial judgment using available cues, rules and reasoning. Some theories indicate that cognitive lazyness could prevent System 2 from kicking in and contributing to the decision. Others state that the sequential nature of the judgment process advantages the primity of the intuitive thought as System 2 has to falsify System 1’s conclusions persuasively. This phenomena is commonly refered to as anchoring and adjustment. However, such models can’t extensively explain the observed proportion of intuitive biases among motivated reasoners who fully process contradictory information. Simmons and Nelson propose a so-call dual-process model that supposedly explains the observed phenomena and makes relevant predictions. Simmon and Nelson’s model The authors’s model relies on four hypotheses: 1) Intuitions are chosen more often because people hold them with high Confidence 2) The magnitude of an opposing piece of information matters for invalidating intuition. 3) People who are more confident about their intuition will follow them more often 4) People who betray their intuition are less confident with their final choice. These rather natural hypotheses are then evaluated by the authors using predition of sporting events as a field case as it provides the experiment with the required variability of inputs magnitude and intuitive confidence. The example of the football bookmaker point spread concept is demonstrated, attempting to explain how most people handle this question. In this case, the initial intuition will answer the question which team will win and the point spread serves as the constraining information where further reasoning should be involved. All four hypotheses can be nicely instantiated against this scenario and evaluated against historical data. The following bullets summarize the result of Simmon and Nelson’s studies regarding the point spread example: Most people bet on favorites in 90% of the games despite of the the point spread. Hypothesis 1 is verified (holds for rookies and experts) The spread magnitude negatively impacts this proportion. Hyp 2 is correct (holds for rookies and experts) People betting on underdogs showed less confidence on the outcome, which seems to verify hypothesis 4 is verified. Finally, people bet for favorites even when setting the spread themselves. This study was design to eliminate the hypothesis that people simply don’t understand the point spread concept when betting on football results. Moreover, this part of the study also verifies hypothesis 4. Conclusion The main finding of this article seems to be that confidence in intuition is the most important factor influencing intuitive versus nonintuitive decisions. Countermeasures are proposed such as artificially altering one’s confidence against their own intuition. Another possible explanation is that people tend to answer a relaxed version of a question (in this case, who will win instead of who will beat the point spread), or sometimes even a different question (which team do you prefer).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://seb.mamessier.com/assets/default-social-image.png" /></entry><entry><title type="html">Sébastien Mamessier</title><link href="http://seb.mamessier.com/2016/05/15/cv/" rel="alternate" type="text/html" title="Sébastien Mamessier" /><published>2016-05-15T19:39:26-05:00</published><updated>2016-05-15T19:39:26-05:00</updated><id>http://seb.mamessier.com/2016/05/15/cv</id><content type="html" xml:base="http://seb.mamessier.com/2016/05/15/cv/">&lt;div style=&quot;float:right; padding-left:20px;&quot;&gt;

&lt;h4&gt;CV/Resume&lt;/h4&gt;
&lt;a href=&quot;../docs/misc/cv.pdf&quot;&gt;Here&lt;/a&gt; you can find my CV in a pdf format.
&amp;lt;/p&amp;gt;
&lt;p&gt;

&lt;img src=&quot;http://seb.mamessier.com/assets/images/2016/05/Seb2.JPG&quot; width=&quot;400px&quot; /&gt;
&amp;lt;/div&amp;gt;

&lt;!--&lt;iframe src = &quot;/ViewerJS/#/docs/misc/cv.pdf&quot; width='800px' height='600px' allowfullscreen webkitallowfullscreen style=&quot;margin-left:auto; margin-right:auto; max-width:90%&quot;&gt;&lt;/iframe&gt;--&gt;

I'm currently a Senior Graduate Researcher and Robotics PhD candidate at Georgia Tech School of Aerospace, working on adaptive controls for semi-autonomous cars as well as collaborative artificial intelligence for future commercial aviation cockpits.

During my curriculum, I worked for two and a half years at Airbus Group Innovations in Munich, Germany, developing cockpit / flight automation concepts and evaluating them using Virtual Reality experiments. Before that, I received a M.S in Aerospace Engineering from Georgia Tech and a Diplome d'Ingenieur from Supaero (France) in 2013.

My PhD thesis work focuses on computational modeling of safe and efficient Human-AI collaboration. Potential applications of my research span from flight deck automation to integration of adaptive controls in semi-automated cars.

My fields of expertise and interests include Human Factors, Controls, Artificial Intelligence and Software Engineering. Private pilot since 2013, I'm a big soccer fan, practice astronomy and contribute to open source projects.
&lt;/p&gt;&lt;/div&gt;</content><author><name>Sebastien Mamessier</name></author><summary type="html">CV/Resume Here you can find my CV in a pdf format. &amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; I'm currently a Senior Graduate Researcher and Robotics PhD candidate at Georgia Tech School of Aerospace, working on adaptive controls for semi-autonomous cars as well as collaborative artificial intelligence for future commercial aviation cockpits. During my curriculum, I worked for two and a half years at Airbus Group Innovations in Munich, Germany, developing cockpit / flight automation concepts and evaluating them using Virtual Reality experiments. Before that, I received a M.S in Aerospace Engineering from Georgia Tech and a Diplome d'Ingenieur from Supaero (France) in 2013. My PhD thesis work focuses on computational modeling of safe and efficient Human-AI collaboration. Potential applications of my research span from flight deck automation to integration of adaptive controls in semi-automated cars. My fields of expertise and interests include Human Factors, Controls, Artificial Intelligence and Software Engineering. Private pilot since 2013, I'm a big soccer fan, practice astronomy and contribute to open source projects.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://seb.mamessier.com/assets/default-social-image.png" /></entry><entry><title type="html">HLA Certi, getting started !</title><link href="http://seb.mamessier.com/2016/04/10/hla-certi-getting-started/" rel="alternate" type="text/html" title="HLA Certi, getting started !" /><published>2016-04-10T20:43:25-05:00</published><updated>2016-04-10T20:43:25-05:00</updated><id>http://seb.mamessier.com/2016/04/10/hla-certi-getting-started</id><content type="html" xml:base="http://seb.mamessier.com/2016/04/10/hla-certi-getting-started/">&lt;p&gt;HLA stands for High Level Architecture, a set of specifications for distributed simulation systems that originated from the US Department of Defense (DoD) around 1996. (Needs citation)&lt;/p&gt;

&lt;h4 id=&quot;hla-overview&quot;&gt;HLA Overview&lt;/h4&gt;

&lt;h6 id=&quot;concepts&quot;&gt;Concepts&lt;/h6&gt;
&lt;p&gt;ToDO&lt;/p&gt;

&lt;h6 id=&quot;features&quot;&gt;Features&lt;/h6&gt;

&lt;h4 id=&quot;certi&quot;&gt;Certi&lt;/h4&gt;

&lt;p&gt;Certi is an open-source implementation of HLA specifications. It provides a HLA Runtime Infrastruture (RTI), a Federation Ambassador module and APIs to build a HLA federation.&lt;/p&gt;

&lt;h4 id=&quot;compiling-certi&quot;&gt;Compiling CERTI&lt;/h4&gt;

&lt;h6 id=&quot;predependencies&quot;&gt;Predependencies&lt;/h6&gt;
&lt;p&gt;You will need to install &lt;code class=&quot;highlighter-rouge&quot;&gt;Cmake&lt;/code&gt; and have &lt;code class=&quot;highlighter-rouge&quot;&gt;GCC&lt;/code&gt; installed on your Linux system. I found it mandatory to install &lt;code class=&quot;highlighter-rouge&quot;&gt;YACC&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;LEX&lt;/code&gt; as well. &lt;code class=&quot;highlighter-rouge&quot;&gt;libxml2-dev&lt;/code&gt; is optional, you want to install it to be able to export/import federations.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install build-essential cmake sudo byacc flex libxml2-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h6 id=&quot;build-certi-from-sources&quot;&gt;Build Certi from sources&lt;/h6&gt;
&lt;p&gt;The first thing to do to work with Certi is to get the sources from Certi’s git forge.
Then create a build folder.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git://git.savannah.nongnu.org/certi.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;certi
mkdir build
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;build
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Run Cmake by picking an installation folder &lt;code class=&quot;highlighter-rouge&quot;&gt;installFolder&lt;/code&gt; and compile with make. In &lt;code class=&quot;highlighter-rouge&quot;&gt;make -jn&lt;/code&gt;, replace &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; with the number of cores to speed up compilation.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cmake -DCMAKE_ISNTALL_PREFIX&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/installFolder ..
make -j4
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When using recent versions of GCC, compilation might fail with the following error message:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; 66%] Linking CXX executable TestFedTime
libFedTimed.so.1.0.0: undefined reference to &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;typeinfo &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;RTI::Exception&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is due to a cyclical dependency (FedTime is supposed to throw RTI::Exception) not declared in CMake (to make it work). However, throwing exceptions requires a &lt;a href=&quot;https://gcc.gnu.org/wiki/Visibility&quot;&gt;typeinfo lookup&lt;/a&gt; which triggers GCC’s error. Making RTI::Exception destructor purely virtual seems to fix the problem. (Probably because in the absence of non-inline virtual methods, GCC copies the typeinfo to all relevant translation units, &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc/Vague-Linkage.html&quot;&gt;see here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Last step is to run a script to setup the approriate environment variables.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;installFolder/myCERTI_env.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I recommand to add this line at the end of your &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt; file so that you don’t have to rerun it everytime.&lt;/p&gt;

&lt;h4 id=&quot;getting-started-with-hla-certi&quot;&gt;Getting started with HLA Certi&lt;/h4&gt;

&lt;p&gt;Now we want to run the CERTI tutorial.
First, clone the applications repository&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git://git.savannah.nongnu.org/certi/applications.git Certi-Apps
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It’s now time to build the tutorial:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd Certi-Apps/HLA_Tutorial
mkdir build
cd build
cmake -DCMAKE_ISNTALL_PREFIX=appsInstallFolder ..
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now open three terminals and run respectively:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; into &lt;code class=&quot;highlighter-rouge&quot;&gt;appsInstallFolder/share/federations&lt;/code&gt;. Launch the Runtime &lt;code class=&quot;highlighter-rouge&quot;&gt;rtig&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Launch the tutorial controller app &lt;code class=&quot;highlighter-rouge&quot;&gt;appsInstallFolder/bin/controllerFederate&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Launch the tutorial process app &lt;code class=&quot;highlighter-rouge&quot;&gt;appsInstallFolder/bin/processFederate&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then terminal &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; should guide you through the the tutorial, make sure you observe the three terminals outputs during the execution of the tutorial.&lt;/p&gt;

&lt;p&gt;Sources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://gcc.gnu.org/wiki/Visibility&lt;/li&gt;
  &lt;li&gt;https://gcc.gnu.org/onlinedocs/gcc/Vague-Linkage.html&lt;/li&gt;
  &lt;li&gt;http://www.nongnu.org/certi/certi_doc/Install/html/build.html&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sebastien Mamessier</name></author><category term="dev-tutorials" /><summary type="html">HLA stands for High Level Architecture, a set of specifications for distributed simulation systems that originated from the US Department of Defense (DoD) around 1996. (Needs citation) HLA Overview Concepts ToDO Features Certi Certi is an open-source implementation of HLA specifications. It provides a HLA Runtime Infrastruture (RTI), a Federation Ambassador module and APIs to build a HLA federation. Compiling CERTI Predependencies You will need to install Cmake and have GCC installed on your Linux system. I found it mandatory to install YACC and LEX as well. libxml2-dev is optional, you want to install it to be able to export/import federations. sudo apt-get install build-essential cmake sudo byacc flex libxml2-dev Build Certi from sources The first thing to do to work with Certi is to get the sources from Certi’s git forge. Then create a build folder. git clone git://git.savannah.nongnu.org/certi.git cd certi mkdir build cd build Run Cmake by picking an installation folder installFolder and compile with make. In make -jn, replace n with the number of cores to speed up compilation. cmake -DCMAKE_ISNTALL_PREFIX=/installFolder .. make -j4 make install When using recent versions of GCC, compilation might fail with the following error message: [ 66%] Linking CXX executable TestFedTime libFedTimed.so.1.0.0: undefined reference to `typeinfo for RTI::Exception` This is due to a cyclical dependency (FedTime is supposed to throw RTI::Exception) not declared in CMake (to make it work). However, throwing exceptions requires a typeinfo lookup which triggers GCC’s error. Making RTI::Exception destructor purely virtual seems to fix the problem. (Probably because in the absence of non-inline virtual methods, GCC copies the typeinfo to all relevant translation units, see here. Last step is to run a script to setup the approriate environment variables. source installFolder/myCERTI_env.sh I recommand to add this line at the end of your ~/.bashrc file so that you don’t have to rerun it everytime. Getting started with HLA Certi Now we want to run the CERTI tutorial. First, clone the applications repository git clone git://git.savannah.nongnu.org/certi/applications.git Certi-Apps It’s now time to build the tutorial: cd Certi-Apps/HLA_Tutorial mkdir build cd build cmake -DCMAKE_ISNTALL_PREFIX=appsInstallFolder .. make make install Now open three terminals and run respectively: cd into appsInstallFolder/share/federations. Launch the Runtime rtig Launch the tutorial controller app appsInstallFolder/bin/controllerFederate Launch the tutorial process app appsInstallFolder/bin/processFederate Then terminal 2 should guide you through the the tutorial, make sure you observe the three terminals outputs during the execution of the tutorial. Sources: https://gcc.gnu.org/wiki/Visibility https://gcc.gnu.org/onlinedocs/gcc/Vague-Linkage.html http://www.nongnu.org/certi/certi_doc/Install/html/build.html</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://seb.mamessier.com/assets/default-social-image.png" /></entry><entry><title type="html">Optimizing the Dell XPS 15 9550 for Ubuntu 16.04 / 16.10</title><link href="http://seb.mamessier.com/2016/04/06/dell-xps-15-9550-ubuntu-16-04/" rel="alternate" type="text/html" title="Optimizing the Dell XPS 15 9550 for Ubuntu 16.04 / 16.10" /><published>2016-04-06T04:34:26-05:00</published><updated>2016-04-06T04:34:26-05:00</updated><id>http://seb.mamessier.com/2016/04/06/dell-xps-15-9550-ubuntu-16-04</id><content type="html" xml:base="http://seb.mamessier.com/2016/04/06/dell-xps-15-9550-ubuntu-16-04/">&lt;p&gt;This laptop is a combination of beauty and performance that many developers will appreciate. Therefore Windows is not alway the best choice and one might greatly benefit from a dual boot setting. This article describes how to setup efficiently Ubuntu 16.04 on the XPS 15 9550.&lt;/p&gt;

&lt;h5 id=&quot;installation&quot;&gt;Installation&lt;/h5&gt;
&lt;p&gt;I followed the steps shown on &lt;a href=&quot;http://ubuntuforums.org/showthread.php?t=2317843&quot;&gt;this page&lt;/a&gt; and it seemed to work quite well. I suggest to use &lt;a href=&quot;https://rufus.akeo.ie/&quot;&gt;Rufus&lt;/a&gt; to create the Ubuntu bootable USB disk on Windows.
I just had to launch the Live CD first and then install from there (The direct install option was buggy somehow).
You get something quite convincing out of the box, but there is still some work to get everything work perfectly.&lt;/p&gt;

&lt;h5 id=&quot;freezes-on-windows-dual-boot&quot;&gt;Freezes on Windows (dual boot)&lt;/h5&gt;
&lt;p&gt;After switching from Raid to AHCI - as suggested in &lt;a href=&quot;http://ubuntuforums.org/showthread.php?t=2317843&quot;&gt;this tutorial&lt;/a&gt; - you may encounter BSOD freezes - with the only hint being &lt;code class=&quot;highlighter-rouge&quot;&gt;CRITICAL_PROCESS_DIED&lt;/code&gt;. It seems to be due to the SSD driver, installing the &lt;a href=&quot;http://www.samsung.com/global/business/semiconductor/minisite/SSD/global/html/support/downloads.html&quot;&gt;last Samsung 950 pro drivers&lt;/a&gt; solved the problem for me.&lt;/p&gt;

&lt;h5 id=&quot;hidpi&quot;&gt;HiDpi&lt;/h5&gt;
&lt;p&gt;For 4K (HiDpi) screens, Gnome allows you to have everything scaled up (same as in windows 10). For this just go in &lt;code class=&quot;highlighter-rouge&quot;&gt;System settings &amp;gt; Display&lt;/code&gt; and use the &lt;code class=&quot;highlighter-rouge&quot;&gt;Scale for menu and bars&lt;/code&gt; slider to something like &lt;code class=&quot;highlighter-rouge&quot;&gt;2.25&lt;/code&gt;. This was good for me. Qt-based apps might not use this settings. (Example: Qt Creator / Tex Studio, …)&lt;/p&gt;

&lt;p&gt;For QT5 applications, ArchiWiki’s &lt;a href=&quot;https://wiki.archlinux.org/index.php/HiDPI#Qt_5&quot;&gt;HiDpi page&lt;/a&gt; rightfully suggests to create the file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile.d/qt-hidpi.sh&lt;/code&gt;, give it execution permission (&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo chmod +x /etc/profile.d/qt-hidpi.sh&lt;/code&gt;). You will need to restart Ubuntu to account for this change.&lt;/p&gt;

&lt;h6 id=&quot;multi-screen-setup&quot;&gt;Multi-screen setup&lt;/h6&gt;
&lt;p&gt;I found it very painful to independently setup HiDpi settings for multiple screens. (For instance, one 1080p external monitor along with your 4k laptop screen). I did not find any solution using the Nvidia drivers (&lt;code class=&quot;highlighter-rouge&quot;&gt;xrandr&lt;/code&gt; crashes), and the following setup - from &lt;a href=&quot;https://wiki.archlinux.org/index.php/HiDPI&quot;&gt;here&lt;/a&gt; - works when switching over to Intel (using &lt;code class=&quot;highlighter-rouge&quot;&gt;nvidia-settings&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xrandr --output eDP-1 --auto --output HDMI-1 --auto --panning 3840x2160+3840+0 --scale 2x2 --right-of eDP-1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This will allow you to have your external monitor on the right of your 4k laptop. Make sure to increase the Scale in Ubuntu’s Displays GUI as well.&lt;/p&gt;

&lt;h5 id=&quot;graphics&quot;&gt;Graphics&lt;/h5&gt;
&lt;p&gt;Nvidia drivers for Linux seemed pretty unstabled on the XPS until I tried version 375.xx which seems to work very well.&lt;/p&gt;

&lt;p&gt;First, add the ppa containing up-to-date packages:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo add-apt-repository ppa:graphics-drivers/ppa
sudo apt update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Then you can install the drivers using&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install nvidia-375
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You can switch back and forth between different graphics drivers using the &lt;code class=&quot;highlighter-rouge&quot;&gt;Additional drivers&lt;/code&gt; Gnome GUI.&lt;/p&gt;

&lt;h5 id=&quot;bluetooth&quot;&gt;Bluetooth&lt;/h5&gt;
&lt;p&gt;Out of the box, bluetooth can’t find any device. Following this dark magic steps (from the &lt;a href=&quot;http://ubuntuforums.org/showthread.php?t=2317843&quot;&gt;ubuntuforum thread&lt;/a&gt;) fixed it for me, but I would recommend you to investigate this before blindly apply this fix.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Download the firmware from an obscure dropbox https://www.dropbox.com/s/8goc4omhnzxij93/BCM-0a5c-6410.hcd?dl=0&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo cp BCM-0a5c-6410.hcd /lib/firmware/brcm/&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Reboot&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;fixing-palm-detection-tested-on-ubuntu-1604&quot;&gt;Fixing Palm detection (tested on Ubuntu 16.04)&lt;/h6&gt;
&lt;p&gt;Something super annoying that happens when typing is that the palm of your hand accidently taps the touchpad. This has the undesirable effect of jumping the cursor to wherever the mouse is, selecting random chunks of texts and messing up with your input. It took me a while to find a proper solution, this seems to be working - from [here](http://wiki.yobi.be/wiki/Laptop_Dell_XPS_15](http://wiki.yobi.be/wiki/Laptop_Dell_XPS_15).&lt;/p&gt;

&lt;p&gt;Add to the file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/modprobe.d/blacklist.conf&lt;/code&gt; the following line:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;blacklist i2c_designware-platform
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Reboot your linux system.&lt;/p&gt;

&lt;h6 id=&quot;energy-comsumption&quot;&gt;Energy comsumption&lt;/h6&gt;
&lt;p&gt;The battery lasts longer on Windows than Linux, so there is a lot of room for improvement on this aspect. It may be due to Skylake processors power management which still needs some tuning on Linux. The first thing to do to save battery is to use the Intel GPU (for this install &lt;code class=&quot;highlighter-rouge&quot;&gt;nvidia-prime&lt;/code&gt;, then the program Nvidia Settings will allow you to switch). I run some battery tests using &lt;code class=&quot;highlighter-rouge&quot;&gt;powertop&lt;/code&gt; and the best I can get with Ubuntu (With the 4K model) is &lt;code class=&quot;highlighter-rouge&quot;&gt;10.5W&lt;/code&gt; when idle with screen brightness on &lt;code class=&quot;highlighter-rouge&quot;&gt;20%&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;12W&lt;/code&gt; with Wifi/Firefox on. About twice as much when using Nvidia GPU. I tested Linux kernel 4.4.2 and found no difference with 4.4.0 present in Xenial by default. I’ll keep investigating this as it appears Windows manages to only use 5W when idle.&lt;/p&gt;

&lt;h5 id=&quot;update-may-2016-testing-kernel-46&quot;&gt;(Update May 2016) Testing Kernel 4.6&lt;/h5&gt;
&lt;p&gt;Linux Kernel 4.6 got released seemingly with improvements regarding Skylake architectures. Let’s test it !
It is preferable to switch from Nvidia drivers to the free driver before install the new kernel (Got a bunch of errors before I switched), you can do that in the Ubuntu &lt;code class=&quot;highlighter-rouge&quot;&gt;Additional drivers&lt;/code&gt; utility program. Unfortunately, energy consumption did not improve, however, I feel startup and shutdown times improved and dual screen setup is much more stable! (No more freezes).
Also, a very annoying bug was making any chromium-based IDE (Atom, Visual Studio Code) very laggy using Intel graphics, this seems to be fixed!&lt;/p&gt;

&lt;h5 id=&quot;update-feb-2017-ubuntu-1610-yakety-yak&quot;&gt;(Update Feb 2017) Ubuntu 16.10 Yakety Yak&lt;/h5&gt;
&lt;p&gt;Last Ubuntu update installs Kernel 4.8 which can only be good for your Skylake CPU. Did not have time for a quantitative analysis yet, but the system is stable.&lt;/p&gt;

&lt;p&gt;Sources&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.yobi.be/wiki/Laptop_Dell_XPS_15&quot;&gt;http://wiki.yobi.be/wiki/Laptop_Dell_XPS_15&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ubuntuforums.org/showthread.php?t=2317843&quot;&gt;http://ubuntuforums.org/showthread.php?t=2317843&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sebastien Mamessier</name></author><category term="dev-tutorials" /><summary type="html">This laptop is a combination of beauty and performance that many developers will appreciate. Therefore Windows is not alway the best choice and one might greatly benefit from a dual boot setting. This article describes how to setup efficiently Ubuntu 16.04 on the XPS 15 9550. Installation I followed the steps shown on this page and it seemed to work quite well. I suggest to use Rufus to create the Ubuntu bootable USB disk on Windows. I just had to launch the Live CD first and then install from there (The direct install option was buggy somehow). You get something quite convincing out of the box, but there is still some work to get everything work perfectly. Freezes on Windows (dual boot) After switching from Raid to AHCI - as suggested in this tutorial - you may encounter BSOD freezes - with the only hint being CRITICAL_PROCESS_DIED. It seems to be due to the SSD driver, installing the last Samsung 950 pro drivers solved the problem for me. HiDpi For 4K (HiDpi) screens, Gnome allows you to have everything scaled up (same as in windows 10). For this just go in System settings &amp;gt; Display and use the Scale for menu and bars slider to something like 2.25. This was good for me. Qt-based apps might not use this settings. (Example: Qt Creator / Tex Studio, …) For QT5 applications, ArchiWiki’s HiDpi page rightfully suggests to create the file /etc/profile.d/qt-hidpi.sh, give it execution permission (sudo chmod +x /etc/profile.d/qt-hidpi.sh). You will need to restart Ubuntu to account for this change. Multi-screen setup I found it very painful to independently setup HiDpi settings for multiple screens. (For instance, one 1080p external monitor along with your 4k laptop screen). I did not find any solution using the Nvidia drivers (xrandr crashes), and the following setup - from here - works when switching over to Intel (using nvidia-settings). xrandr --output eDP-1 --auto --output HDMI-1 --auto --panning 3840x2160+3840+0 --scale 2x2 --right-of eDP-1 This will allow you to have your external monitor on the right of your 4k laptop. Make sure to increase the Scale in Ubuntu’s Displays GUI as well. Graphics Nvidia drivers for Linux seemed pretty unstabled on the XPS until I tried version 375.xx which seems to work very well. First, add the ppa containing up-to-date packages: sudo add-apt-repository ppa:graphics-drivers/ppa sudo apt update Then you can install the drivers using sudo apt-get install nvidia-375 You can switch back and forth between different graphics drivers using the Additional drivers Gnome GUI. Bluetooth Out of the box, bluetooth can’t find any device. Following this dark magic steps (from the ubuntuforum thread) fixed it for me, but I would recommend you to investigate this before blindly apply this fix. Download the firmware from an obscure dropbox https://www.dropbox.com/s/8goc4omhnzxij93/BCM-0a5c-6410.hcd?dl=0 sudo cp BCM-0a5c-6410.hcd /lib/firmware/brcm/ Reboot Fixing Palm detection (tested on Ubuntu 16.04) Something super annoying that happens when typing is that the palm of your hand accidently taps the touchpad. This has the undesirable effect of jumping the cursor to wherever the mouse is, selecting random chunks of texts and messing up with your input. It took me a while to find a proper solution, this seems to be working - from [here](http://wiki.yobi.be/wiki/Laptop_Dell_XPS_15](http://wiki.yobi.be/wiki/Laptop_Dell_XPS_15). Add to the file /etc/modprobe.d/blacklist.conf the following line: blacklist i2c_designware-platform Reboot your linux system. Energy comsumption The battery lasts longer on Windows than Linux, so there is a lot of room for improvement on this aspect. It may be due to Skylake processors power management which still needs some tuning on Linux. The first thing to do to save battery is to use the Intel GPU (for this install nvidia-prime, then the program Nvidia Settings will allow you to switch). I run some battery tests using powertop and the best I can get with Ubuntu (With the 4K model) is 10.5W when idle with screen brightness on 20%, 12W with Wifi/Firefox on. About twice as much when using Nvidia GPU. I tested Linux kernel 4.4.2 and found no difference with 4.4.0 present in Xenial by default. I’ll keep investigating this as it appears Windows manages to only use 5W when idle. (Update May 2016) Testing Kernel 4.6 Linux Kernel 4.6 got released seemingly with improvements regarding Skylake architectures. Let’s test it ! It is preferable to switch from Nvidia drivers to the free driver before install the new kernel (Got a bunch of errors before I switched), you can do that in the Ubuntu Additional drivers utility program. Unfortunately, energy consumption did not improve, however, I feel startup and shutdown times improved and dual screen setup is much more stable! (No more freezes). Also, a very annoying bug was making any chromium-based IDE (Atom, Visual Studio Code) very laggy using Intel graphics, this seems to be fixed! (Update Feb 2017) Ubuntu 16.10 Yakety Yak Last Ubuntu update installs Kernel 4.8 which can only be good for your Skylake CPU. Did not have time for a quantitative analysis yet, but the system is stable. Sources http://wiki.yobi.be/wiki/Laptop_Dell_XPS_15 http://ubuntuforums.org/showthread.php?t=2317843</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://seb.mamessier.com/assets/default-social-image.png" /></entry><entry><title type="html">Projects</title><link href="http://seb.mamessier.com/2016/03/06/projects/" rel="alternate" type="text/html" title="Projects" /><published>2016-03-06T04:47:00-05:00</published><updated>2016-03-06T04:47:00-05:00</updated><id>http://seb.mamessier.com/2016/03/06/projects</id><content type="html" xml:base="http://seb.mamessier.com/2016/03/06/projects/">&lt;h1 id=&quot;academic-projects&quot;&gt;Academic projects&lt;/h1&gt;

&lt;h2 id=&quot;2016&quot;&gt;2016&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/proj-2016-ns&quot;&gt;Network security and domain blacklists&lt;/a&gt;&lt;/p&gt;</content><author><name>Sebastien Mamessier</name></author><summary type="html">Academic projects 2016 Network security and domain blacklists</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://seb.mamessier.com/assets/default-social-image.png" /></entry><entry><title type="html">Hack4Europe - VRide</title><link href="http://seb.mamessier.com/2015/05/26/hack4europe-vride/" rel="alternate" type="text/html" title="Hack4Europe - VRide" /><published>2015-05-26T15:56:00-05:00</published><updated>2015-05-26T15:56:00-05:00</updated><id>http://seb.mamessier.com/2015/05/26/hack4europe-vride</id><content type="html" xml:base="http://seb.mamessier.com/2015/05/26/hack4europe-vride/">&lt;p&gt;Hacked in 3 week ends, I coded VRide together with Gregoire Deprez, the goal was to enhance Uber/Lift rides with Augmented Reality experiences. More like a proof of concept, it got use familiarized with Vuforia, AR markers, OpenGL, WebGL, CSS3D and Uber APIs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://seb.mamessier.com/assets/images/2016/05/vride-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The video is slightly laggy (available hardware was slighty insufficient, we should try again with newer smartphones!), but gives a good impression of the concept !&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/M1yG-ApbirE&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>Sebastien Mamessier</name></author><category term="projects-other" /><summary type="html">Hacked in 3 week ends, I coded VRide together with Gregoire Deprez, the goal was to enhance Uber/Lift rides with Augmented Reality experiences. More like a proof of concept, it got use familiarized with Vuforia, AR markers, OpenGL, WebGL, CSS3D and Uber APIs. The video is slightly laggy (available hardware was slighty insufficient, we should try again with newer smartphones!), but gives a good impression of the concept !</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://seb.mamessier.com/assets/default-social-image.png" /></entry></feed>